public int largestRectangleArea(int[] height) {  
   Stack<Integer> left = new Stack<Integer>();  
   int cur = 0, area = 0;  
   while (cur < height.length) {  
     if (left.isEmpty() || height[cur] >= height[left.peek()]) {  
       // push to stack if we hit a greater or equal height  
       left.push(cur++);  
     } else {  
       int top = left.pop();  
       // the height at left.peek() must be smaller than the current one  
       // so, the width of the rectangle is [left.peek()+1, cur)  
       area = Math.max(area, height[top]*(left.isEmpty() ? cur : (cur-left.peek()-1)));  
     }  
   }  
   while (!left.isEmpty()) {  
       int top = left.pop();  
       area = Math.max(area, height[top]*(left.isEmpty() ? cur : (cur-left.peek()-1)));  
   }  
   return area;  
 }  
