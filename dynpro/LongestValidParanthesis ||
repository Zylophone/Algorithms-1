public class Solution {
    public int longestValidParentheses(String A) {
        Stack<int[]> stack = new Stack<>();
        
        int result = 0;
        
        for(int i=0; i<=A.length()-1; i++) {
            char c = A.charAt(i);
            if(c=='(') {
                int[] a = {i, 0};
                stack.push(a);
            } else {
                if(stack.empty() || stack.peek()[1]==1) {
                    int[] a = {i, 1};
                    stack.push(a);
                } else {
                    stack.pop();
                    int currentLen = 0;
                    if(stack.empty()) {
                        currentLen = i+1;
                    } else {
                        currentLen = i-stack.peek()[0];
                    }
                    result = Math.max(result, currentLen);
                }
            }
        }
        
        return result;
    }
}
